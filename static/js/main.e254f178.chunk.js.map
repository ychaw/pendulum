{"version":3,"sources":["data/Constants.ts","data/Presets.ts","dsp/audio-graph.ts","sim/double-pendulum.ts","com/Visualizations.tsx","com/SettingsCards.tsx","com/PendulumVisualization.tsx","com/EnvelopeVisualization.tsx","com/FilterVisualization.tsx","com/VolumeVisualizationP5.tsx","App.tsx","reportWebVitals.js","index.tsx"],"names":["DSPZERO","VALUERES","LP","HP","BP","NOTCH","Presets","visualsOrder","pvMemorySettings","pvPendulumSettings","oscillator","envelope","filter","volume","this","drawMode","maxMem","fadingStart","strokeWeight","drawColor","legWeight","ankleWidth","name","thetaFirstLeg","step","min","max","Math","round","PI","default","random","thetaSecondLeg","lengthFirstLeg","lengthSecondLeg","massFirstAnkle","massSecondAnkle","gravitation","a","d","s","r","type","options","frequency","resonance","valueLabelFormat","value","theta","l","m","g","Preset","AudioGraph","doublePendulum","audioContext","audioNodes","envelopeTimerID","oscillatorTimerID","pendulum","pendulumBuffer","fft","activeNotes","hasMIDI","enabledMIDI","updateOscillator","window","clearTimeout","nextTableIndex","gainNodes","gain","linearRampToValueAtTime","currentTime","morphDuration","setTimeout","setOscillatorWave","AudioContext","oscillators","createOscillator","createGain","morphStage","createBiquadFilter","master","stage","timings","Float64Array","FFT","length","initSmoothTransitions","connectNodes","console","log","morphOsc","i","connect","destination","forEach","osc","start","exponentialRampToValueAtTime","toggleEnvelope","segment","identifier","param","includes","Q","val","keepValuePositive","buffer","n","initialState","getPendulumState","lastState","Array","from","dTheta","ddTheta","fill","abs","pow","index","x","sin","advanceState","fillBuffer","out","createComplexArray","realTransform","real","Float32Array","imag","wave","createPeriodicWave","setPeriodicWave","res","freq","magOut","phaOut","fStep","getFrequencyResponse","enable","cancelScheduledValues","setTargetAtTime","MIDIMessageEventHandler","event","data","noteOff","noteOn","frequencyFromNoteNumber","note","noteNumber","push","position","indexOf","splice","navigator","requestMIDIAccess","then","midi","foundDevice","inputs","values","input","next","done","onmidimessage","err","DoublePendulum","init","y","mem","defaults","initialConditions","massSum","biasedMassSum","angleDifference","doubleSineAngleDiff","cosAngleDiff","denFactor","velSquaredTimesL","newValue","resetPhysics","cos","nextState","recalcPositions","prev","num","den","state","Visualizations","nextProps","props","highlighted","doublePendulumVisualization","envelopeVisualization","filterVisualization","volumeVisualization","className","id","React","Component","PendulumContent","theta1Value","theta2Value","setState","startsWith","handleSliderChange","params","Object","keys","preset","shift","lastParam","pop","content","slice","p","split","Slider","undefined","disabled","disabledTheta","defaultValue","onChange","e","changeValue","valueLabelDisplay","lastP","EnvelopeContent","map","toUpperCase","FilterContent","typeName","filterDisplayNames","Map","Select","target","option","MenuItem","get","VolumeContent","SettingsCards","diabledTheta","disabledEnvelope","classNames","presets","getComponentByName","onMouseEnter","setHighlight","onMouseLeave","clearHighlight","sliderChanges","PendulumVisualization","orgDim","dim","padding","paused","setup","p5","canvasParentRef","clientWidth","clientHeight","createCanvas","parent","doubleClicked","canvasDoubleClicked","windowResized","newWidth","document","getElementsByClassName","item","newHeight","resizeCanvas","translate","createGraphics","width","height","textFont","draw","clear","x0","dp","y0","x1","y1","px1","py1","tick","memorySettings","image","stroke","frameCount","line","low1","high1","low2","alpha","color","circle","previous","noFill","pendulumSettings","noStroke","EnvelopeVisualization","ResponsiveContainer","LineChart","margin","top","bottom","left","right","XAxis","hide","dataKey","domain","YAxis","Line","strokeWidth","dot","strokeLinecap","FilterVisualization","spectrum","raw_data","Boolean","lerpRange","high2","VolumeVisualization","history","xRange","frameRate","maxValue","halfHeight","current","isNaN","theme","createMuiTheme","palette","primary","main","typography","fontFamily","fontSize","App","audioGraph","componentNames","suspend","pendulumPaused","resume","handleOscillatorChange","setValue","handleEnvelopeChange","setEnvelope","envelopeA","envelopeD","envelopeS","envelopeR","handleFilterChange","setFilter","filterSpectrum","getFilterSpectrum","handleVolumeChange","setMasterGain","handleModalClose","greeterOpen","getComponentNames","getDoublePendulumPresets","ThemeProvider","Modal","open","onClose","style","marginTop","onClick","setupMidi","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.e254f178.chunk.js","sourcesContent":["// Global parameters\nexport const PARAM_SMOOTHING = 0.3; // Smoothing for parameter changes in seconds\nexport const SAMPLERATE = 48000;\nexport const DSPZERO = 1e-32; // DSP elements do not like zero. Use this instead.\nexport const TWENTYK = 20000; // Approx. upper limit of human hearing\nexport const VALUERES = 1000; // Resolution in steps for values that need mapping from UI into DSP.\n\nexport const FILTER_RESOLUTION = 100;\n\n// Strings for reuse\nexport const A = 'a';\nexport const D = 'd';\nexport const S = 's';\nexport const R = 'r';\nexport const LP = 'lp';\nexport const HP = 'hp';\nexport const BP = 'bp';\nexport const NOTCH = 'notch';\nexport const TYPE = 'type';\nexport const FREQ = 'frequency';\nexport const RES = 'resonance';\n","import { LP, HP, BP, NOTCH, DSPZERO, VALUERES, TWENTYK } from './Constants';\n\nexport interface IPreset {\n  readonly step?: number;\n  readonly name?: string;\n  readonly min: number;\n  readonly max: number;\n  readonly default: number;\n  readonly valueLabelFormat?: any;\n}\n\nexport interface ITypes {\n  readonly options: string[];\n  readonly default: string;\n}\n\nexport class Presets {\n\n  readonly visualsOrder: {\n    readonly Oscillator: string;\n    readonly Envelope: string;\n    readonly Filter: string;\n    readonly Volume: string;\n  };\n  readonly pvMemorySettings: {\n    readonly drawMode: 'solidLine' | 'fadingLine' | 'dots';\n    readonly maxMem: number;\n    readonly fadingStart: number;\n    readonly strokeWeight: number;\n    readonly drawColor: number[];\n  };\n  readonly pvPendulumSettings: {\n    readonly drawColor: number[];\n    readonly legWeight: number;\n    readonly ankleWidth: number;\n  };\n  readonly oscillator: {\n    readonly name: string;\n    readonly thetaFirstLeg: IPreset;\n    readonly thetaSecondLeg: IPreset;\n    readonly lengthFirstLeg: IPreset;\n    readonly lengthSecondLeg: IPreset;\n    readonly massFirstAnkle: IPreset;\n    readonly massSecondAnkle: IPreset;\n    readonly gravitation: IPreset;\n  };\n  readonly envelope: {\n    readonly name: string;\n    readonly a: IPreset;\n    readonly d: IPreset;\n    readonly s: IPreset;\n    readonly r: IPreset;\n  };\n  readonly filter: {\n    readonly name: string;\n    readonly type: ITypes;\n    readonly frequency: IPreset;\n    readonly resonance: IPreset;\n  };\n  readonly volume: {\n    readonly name: string;\n    readonly volume: IPreset;\n  };\n\n  constructor() {\n\n    this.visualsOrder = {\n      'Oscillator': 'FocusCard',\n      'Envelope': 'DetailTopCard',\n      'Filter': 'DetailCenterCard',\n      'Volume': 'DetailBottomCard',\n    }\n\n    this.pvMemorySettings = {\n      drawMode: 'fadingLine',\n      maxMem: 400,\n      fadingStart: 150,\n      strokeWeight: 1,\n      drawColor: [200, 200, 200]\n    }\n\n    this.pvPendulumSettings = {\n      drawColor: [255, 255, 255],\n      legWeight: 4,\n      ankleWidth: 10\n    }\n\n    this.oscillator = {\n      name: 'Oscillator',\n      thetaFirstLeg: {\n        step: 0.01,\n        min: 0,\n        max: Math.round(Math.PI * 2 * 100) / 100,\n        default: Math.round(Math.random() * Math.PI * 2 * 100) / 100\n      },\n      thetaSecondLeg: {\n        step: 0.01,\n        min: 0,\n        max: Math.round(Math.PI * 2 * 100) / 100,\n        default: Math.round(Math.random() * Math.PI * 2 * 100) / 100\n      },\n      lengthFirstLeg: {\n        min: 10,\n        max: 160,\n        default: 160\n      },\n      lengthSecondLeg: {\n        min: 10,\n        max: 160,\n        default: 160\n      },\n      massFirstAnkle: {\n        min: 1,\n        max: 40,\n        default: 10\n      },\n      massSecondAnkle: {\n        min: 1,\n        max: 40,\n        default: 10\n      },\n      gravitation: {\n        step: 0.1,\n        min: 0.1,\n        max: 2,\n        default: 0.8\n      },\n    }\n\n    // All values describe time in ms, except s which is a level of volume\n    this.envelope = {\n      name: 'Envelope',\n      a: {\n        min: 5,\n        max: 2000,\n        default: 400\n      },\n      d: {\n        min: 5,\n        max: 2000,\n        default: 500\n      },\n      s: {\n        min: 5,\n        max: VALUERES,\n        default: 600\n      },\n      r: {\n        min: 5,\n        max: 2000,\n        default: 300\n      }\n    }\n\n    this.filter = {\n      name: 'Filter',\n      type: {\n        options: [LP, HP, BP, NOTCH],\n        default: LP\n      },\n      // Cutoff frequency or the point where the filters effect becomes audible\n      frequency: {\n        min: 20,\n        max: TWENTYK,\n        default: 200\n      },\n      resonance: {\n        min: DSPZERO,\n        max: VALUERES,\n        default: 100\n      }\n    }\n\n    this.volume = {\n      name: 'Volume',\n      volume: {\n        min: DSPZERO,\n        max: VALUERES,\n        default: DSPZERO,\n        step: 10,\n        valueLabelFormat: (value: number) => {\n          return value === DSPZERO ? 0 : value / 10\n        }\n      }\n    };\n  }\n\n  getDoublePendulumPresets() {\n    return {\n      theta: [\n        this.oscillator.thetaFirstLeg.default,\n        this.oscillator.thetaSecondLeg.default,\n      ],\n      l: [\n        this.oscillator.lengthFirstLeg.default,\n        this.oscillator.lengthSecondLeg.default,\n      ],\n      m: [\n        this.oscillator.massFirstAnkle.default,\n        this.oscillator.massSecondAnkle.default,\n      ],\n      g: this.oscillator.gravitation.default,\n    }\n  }\n\n  getComponentByName(name: string) {\n    if (name === this.oscillator.name) {\n      return this.oscillator\n    } else if (name === this.envelope.name) {\n      return this.envelope\n    } else if (name === this.filter.name) {\n      return this.filter\n    } else if (name === this.volume.name) {\n      return this.volume\n    }\n  }\n\n  getComponentNames() {\n    return [this.oscillator.name, this.envelope.name, this.filter.name, this.volume.name]\n  }\n\n}\n","import {A, D, S, R, LP, HP, BP, NOTCH, TYPE, FREQ, RES, PARAM_SMOOTHING, TWENTYK, DSPZERO, VALUERES} from '../data/Constants';\nimport { Presets } from '../data/Presets';\nimport DoublePendulum from '../sim/double-pendulum';\nimport FFT from 'fft.js';\nconst Preset = new Presets();\n\ninterface AudioNodes {\n    oscillator: MorphingOscillator;\n    filter: BiquadFilterNode;\n    gain: GainNode;\n    master: GainNode;\n}\n\ntype ADSREnvelope = {\n    a: number;\n    d: number;\n    s: number;\n    r: number;\n    stage: number;\n    timings: Array<number>;\n}\n\ntype EnvelopeSegment = {\n    identifier: 'a' | 'd' | 's' | 'r';\n    value: number;\n}\n\nexport type FilterParam = {\n    identifier: 'frequency' | 'resonance';\n    value: number;\n}\n\nexport type FilterType = {\n    identifier: 'type';\n    value: 'lp' | 'hp' | 'bp' | 'notch';\n}\n\ntype MorphingOscillator = {\n    oscillators: Array<OscillatorNode>;\n    gainNodes: Array<GainNode>;\n    morphStage: number;\n    morphDuration: number;\n    nextTableIndex: number;\n}\n\nexport default class AudioGraph {\n    audioContext: AudioContext;\n    audioNodes: AudioNodes;\n    envelope: ADSREnvelope;\n    envelopeTimerID: any;\n    oscillatorTimerID: any;\n    pendulum: DoublePendulum;\n    pendulumBuffer: Float64Array;\n    fft: FFT;\n    activeNotes: Array<number>;\n    hasMIDI: boolean;\n    enabledMIDI: boolean;\n\n    constructor(doublePendulum: DoublePendulum) {\n        // create context\n        this.audioContext = new AudioContext();\n        this.audioNodes = {\n            oscillator: {\n              oscillators: [this.audioContext.createOscillator(), this.audioContext.createOscillator()],\n              gainNodes: [this.audioContext.createGain(), this.audioContext.createGain()],\n              morphStage: 0.0,\n              morphDuration: 2000,\n              nextTableIndex: 1,\n            },\n            filter: this.audioContext.createBiquadFilter(),\n            gain: this.audioContext.createGain(),\n            master: this.audioContext.createGain(),\n        };\n        this.envelope = {\n            a: Preset.envelope.a.default / 1000,\n            d: Preset.envelope.d.default / 1000,\n            s: Preset.envelope.s.default / VALUERES,\n            r: Preset.envelope.r.default / 1000,\n            stage: 0,\n            timings: [\n                this.audioContext.currentTime,\n                this.audioContext.currentTime,\n                this.audioContext.currentTime,\n            ],\n        };\n        this.pendulum = doublePendulum;\n\n        this.pendulumBuffer = new Float64Array(1024);\n        this.fft = new FFT(this.pendulumBuffer.length);\n        this.setOscillatorWave();\n        this.audioNodes.oscillator.oscillators[0].frequency.value = 110;\n        this.audioNodes.oscillator.oscillators[1].frequency.value = 110;\n\n        this.initSmoothTransitions();\n        this.connectNodes();\n        this.oscillatorTimerID = window.setTimeout(this.updateOscillator, 10 );\n        this.activeNotes = [];\n        this.hasMIDI = false;\n        this.enabledMIDI = false;\n        console.log('constructed audio graph');\n    }\n\n    connectNodes() {\n        const { filter, gain, master } = this.audioNodes;\n        const morphOsc = this.audioNodes.oscillator;\n        for(let i = 0; i < morphOsc.oscillators.length; i++) {\n          morphOsc.oscillators[i].connect(morphOsc.gainNodes[i]);\n          morphOsc.gainNodes[i].connect(filter);\n        }\n        filter.connect(gain);\n        gain.connect(master);\n        master.connect(this.audioContext.destination);\n        morphOsc.oscillators.forEach(osc => osc.start());\n    }\n\n    // All values that ramp somewhere need to be set once\n    initSmoothTransitions() {\n        this.audioNodes.master.gain.exponentialRampToValueAtTime(Preset.volume.volume.default, this.audioContext.currentTime);\n        this.toggleEnvelope(false);\n        this.audioNodes.filter.frequency.exponentialRampToValueAtTime(Preset.filter.frequency.default, this.audioContext.currentTime);\n        this.audioNodes.oscillator.gainNodes[0].gain.linearRampToValueAtTime(1, this.audioContext.currentTime);\n        this.audioNodes.oscillator.gainNodes[1].gain.linearRampToValueAtTime(DSPZERO, this.audioContext.currentTime);\n    }\n\n\n    setEnvelope(segment: EnvelopeSegment) {\n        switch(segment.identifier) {\n            case A:\n                this.envelope.a = segment.value / 1000;\n                break;\n            case D:\n                this.envelope.d = segment.value / 1000;\n                break;\n            case S:\n                this.envelope.s = segment.value / VALUERES;\n                break;\n            case R:\n                this.envelope.r = segment.value / 1000;\n                break;\n            default:\n                break;\n        }\n    }\n\n    setFilter(param: FilterParam | FilterType) {\n        switch(param.identifier) {\n            case TYPE:\n                const valid = [LP, HP, BP, NOTCH].includes(param.value);\n                if(valid) {\n                    switch(param.value) {\n                        case LP:\n                            this.audioNodes.filter.type = 'lowpass';\n                            break;\n                        case HP:\n                            this.audioNodes.filter.type = 'highpass';\n                            break;\n                        case BP:\n                            this.audioNodes.filter.type = 'bandpass';\n                            break;\n                        case NOTCH:\n                            this.audioNodes.filter.type = 'notch';\n                            break;\n                    }\n                }\n                break;\n            case FREQ:\n                this.audioNodes.filter.frequency.exponentialRampToValueAtTime(param.value, this.audioContext.currentTime + PARAM_SMOOTHING);\n                break;\n            case RES:\n                this.audioNodes.filter.Q.exponentialRampToValueAtTime(param.value, this.audioContext.currentTime + PARAM_SMOOTHING);\n                break;\n            default:\n                break;\n        }\n\n    }\n\n    setMasterGain(value: number) {\n        const val = this.keepValuePositive(value / VALUERES);\n        this.audioNodes.master.gain.exponentialRampToValueAtTime(val, this.audioContext.currentTime + PARAM_SMOOTHING);\n    }\n\n    keepValuePositive(value: number) {\n        if (value < DSPZERO) value = DSPZERO;\n        return value;\n    }\n\n    fillBuffer(buffer: Float64Array, pendulum: DoublePendulum): void {\n        const initialState = pendulum.getPendulumState();\n        let lastState = {\n          ...initialState,\n          // JS apparently copies arrays nested in objects by reference, so we need manual copies for these:\n          theta: Array.from(initialState.theta),\n          dTheta: Array.from(initialState.dTheta),\n          ddTheta: Array.from(initialState.ddTheta),\n        };\n        // rect window\n        const window = Array(buffer.length).fill(1);\n\n        if (true) {\n            // make window a parzen window\n            const w = (n: number) => Math.abs(n) <= buffer.length/4 ?\n                1 - 6 * Math.pow(n/(buffer.length/2), 2) * (1 - Math.abs(n)/(buffer.length/2)) :\n                2 * Math.pow(1 - (Math.abs(n)/(buffer.length/2)), 3);\n            for (let i = 0; i < buffer.length; i++) {\n                window[i] = w(i - buffer.length / 2);\n            }\n        }\n        // fill the buffer with data 'from the future' and undersample\n        for(let index = 0; index < buffer.length; index += 4) {\n            const x = lastState.l[0] * Math.sin(lastState.theta[0]);\n            // use x[1] as value\n            buffer[index] = (x + lastState.l[1] * Math.sin(lastState.theta[1])) * window[index];\n            // use theta as value\n            //buffer[index] = lastState.theta[0] * window[index];\n            lastState = pendulum.advanceState(lastState);\n        }\n    }\n\n    setOscillatorWave(): void {\n        this.fillBuffer(this.pendulumBuffer, this.pendulum);\n        // fourier transform the buffer contents\n        const out = this.fft.createComplexArray();\n        this.fft.realTransform(out, this.pendulumBuffer);\n\n        // split real and imaginary parts\n        const real = new Float32Array(this.pendulumBuffer.length);\n        const imag = new Float32Array(this.pendulumBuffer.length);\n\n        for(let i = 0; i < real.length; i++) {\n            real[i] = out[i * 2];\n            imag[i] = out[1 + i * 2];\n        }\n\n        // build a wave from real and imaginary parts\n        const wave = this.audioContext.createPeriodicWave(real, imag);\n        this.audioNodes.oscillator.oscillators[this.audioNodes.oscillator.nextTableIndex].setPeriodicWave(wave);\n        this.audioNodes.oscillator.nextTableIndex = (this.audioNodes.oscillator.nextTableIndex + 1) % this.audioNodes.oscillator.oscillators.length;\n    }\n\n    updateOscillator = () => {\n      //this.audioNodes.oscillator.gainNodes[0].gain.cancelScheduledValues(this.audioContext.currentTime);\n      //this.audioNodes.oscillator.gainNodes[1].gain.cancelScheduledValues(this.audioContext.currentTime);\n        window.clearTimeout(this.oscillatorTimerID);\n\n\n        const morphDiv = 1;\n      if (this.audioNodes.oscillator.nextTableIndex === 0) {\n          this.audioNodes.oscillator.gainNodes[0].gain.linearRampToValueAtTime(1, this.audioContext.currentTime + this.audioNodes.oscillator.morphDuration / 1000 / morphDiv);\n          this.audioNodes.oscillator.gainNodes[1].gain.linearRampToValueAtTime(DSPZERO, this.audioContext.currentTime + this.audioNodes.oscillator.morphDuration / 1000 / morphDiv);\n      } else if (this.audioNodes.oscillator.nextTableIndex === 1) {\n          this.audioNodes.oscillator.gainNodes[0].gain.linearRampToValueAtTime(DSPZERO, this.audioContext.currentTime + this.audioNodes.oscillator.morphDuration / 1000 / morphDiv);\n          this.audioNodes.oscillator.gainNodes[1].gain.linearRampToValueAtTime(1, this.audioContext.currentTime + this.audioNodes.oscillator.morphDuration / 1000 / morphDiv);\n      }\n        this.oscillatorTimerID = window.setTimeout(this.updateOscillator, this.audioNodes.oscillator.morphDuration);\n\n      this.setOscillatorWave();\n    };\n\n    /**\n      * @param res - How many frequencies will be sampled\n      * @returns Float32Array with values between 0 - 1 that represent the magnitude of the sampled frequencies\n      */\n    getFilterSpectrum(res: number): Float32Array {\n      // Which frequencies to sample\n      const freq = new Float32Array(res);\n      // Output arrays for magnitudes and phases\n      const magOut = new Float32Array(res);\n      const phaOut = new Float32Array(res);\n      // Distance between frequencies\n      const fStep = TWENTYK / res;\n\n      for (let i = 0; i < res; i++) {\n        freq[i] = i * fStep;\n      }\n\n      this.audioNodes.filter.getFrequencyResponse(freq, magOut, phaOut);\n      return magOut;\n    }\n\n    toggleEnvelope(enable: boolean): void {\n        if (enable) {\n            this.audioNodes.gain.gain.exponentialRampToValueAtTime(DSPZERO, this.audioContext.currentTime);\n        } else {\n            this.audioNodes.gain.gain.cancelScheduledValues(0);\n            this.audioNodes.gain.gain.setTargetAtTime(1.0, 0, 1);\n        }\n    }\n\n    setupMidi(): void {\n        let midiAccess;\n        const portamento = 0.001;\n        // functions\n        const onMIDIInit = (midi: any) => {\n            midiAccess = midi;\n            let foundDevice = false;\n            let inputs = midiAccess.inputs.values();\n            for ( let input = inputs.next(); input && !input.done; input = inputs.next()) {\n                input.value.onmidimessage = MIDIMessageEventHandler;\n                foundDevice = true;\n                this.hasMIDI = foundDevice;\n            }\n            if (!foundDevice) {\n                console.log('No MIDI device found');\n            } else {\n                console.log('Connected to MIDI device')\n                this.enabledMIDI = true;\n                this.toggleEnvelope(true);\n            }\n\n        };\n        const onMIDIReject = (err: any) => {\n            console.log('MIDI system failed to start.');\n        };\n        const MIDIMessageEventHandler = (event: any) => {\n            switch (event.data[0] & 0xf0) {\n                case 0x80:\n                    noteOff(event.data[1]);\n                    return;\n                case 0x90:\n                    if (event.data[2] !== 0) {\n                        noteOn(event.data[1]);\n                        return;\n                    }\n            }\n        };\n        const frequencyFromNoteNumber = ( note: number ) => 440 * Math.pow(2, (note-69)/12);\n        const noteOn = ( noteNumber: number ) => {\n            this.activeNotes.push( noteNumber );\n            this.audioNodes.oscillator.oscillators.forEach((osc) => {\n                osc.frequency.cancelScheduledValues(0);\n                osc.frequency.setTargetAtTime( frequencyFromNoteNumber(noteNumber), 0, portamento );\n            });\n            this.audioNodes.gain.gain.cancelScheduledValues(0);\n            this.audioNodes.gain.gain.setTargetAtTime(1.0, 0, this.envelope.a);\n            this.audioNodes.gain.gain.setTargetAtTime(this.envelope.s, this.envelope.a, this.envelope.d);\n        };\n        const noteOff = (noteNumber: number) => {\n            let position = this.activeNotes.indexOf(noteNumber);\n            if (position !== -1) {\n                this.activeNotes.splice(position, 1);\n            }\n            if (this.activeNotes.length === 0) {\n                this.audioNodes.gain.gain.cancelScheduledValues(0);\n                this.audioNodes.gain.gain.setTargetAtTime(0.0, 0, this.envelope.r);\n            } else {\n                this.audioNodes.oscillator.oscillators.forEach((osc) => {\n                    osc.frequency.cancelScheduledValues(0);\n                    osc.frequency.setTargetAtTime(frequencyFromNoteNumber(this.activeNotes[this.activeNotes.length - 1]), 0, portamento);\n                });\n            }\n        };\n        console.log('Trying to access MIDI devices...')\n        // @ts-ignore\n        if (navigator.requestMIDIAccess) {\n            // @ts-ignore\n            navigator.requestMIDIAccess().then( onMIDIInit, onMIDIReject);\n        }\n    }\n}\n","// TYPE DECLARATIONS\ninterface InitialConditions {\n  theta: Array<number>;\n  l: Array<number>;\n  m: Array<number>;\n  g: number;\n}\n\ninterface PendulumState {\n  theta: Array<number>;\n  dTheta: Array<number>;\n  ddTheta: Array<number>;\n  l: Array<number>;\n  m: Array<number>;\n  g: number;\n}\n\ninterface Memory {\n  massSum: number;\n  biasedMassSum: number;\n  angleDifference: number;\n  doubleSineAngleDiff: number;\n  cosAngleDiff: number;\n  denFactor: number;\n  velSquaredTimesL: Array<number>;\n}\n\nexport default class DoublePendulum {\n  // TYPES\n  x: Array<number>;\n  y: Array<number>;\n  theta: Array<number>;\n  dTheta: Array<number>;\n  ddTheta: Array<number>;\n  l: Array<number>;\n  m: Array<number>;\n  g: number;\n  mem: Memory;\n\n  constructor(init: InitialConditions) {\n    const defaults = {\n      theta: [\n        Math.PI / 4,\n        Math.PI / 4,\n      ],\n      l: [120, 70],\n      m: [10, 10],\n      g: 1,\n    };\n    const initialConditions = {\n      ...defaults,\n      ...init\n    }\n    this.x = [0, 0];\n    this.y = [0, 0];\n    this.theta = initialConditions.theta;\n    this.dTheta = [0, 0];\n    this.ddTheta = [0, 0];\n    this.l = initialConditions.l;\n    this.m = initialConditions.m;\n    this.g = initialConditions.g;\n\n    // object to store repeated calculations in\n    this.mem = {\n      massSum: 0,\n      biasedMassSum: 0,\n      angleDifference: 0,\n      doubleSineAngleDiff: 0,\n      cosAngleDiff: 0,\n      denFactor: 0,\n      velSquaredTimesL: [0, 0],\n    };\n  }\n\n  resetPhysics() {\n    if (this.ddTheta[0] !== 0) {\n      this.mem.massSum = 0;\n      this.mem.biasedMassSum = 0;\n      this.mem.angleDifference = 0;\n      this.mem.doubleSineAngleDiff = 0;\n      this.mem.cosAngleDiff = 0;\n      this.mem.denFactor = 0;\n      this.mem.velSquaredTimesL = [0, 0];\n      this.dTheta = [0, 0];\n      this.ddTheta = [0, 0];\n    }\n  }\n\n  setValue(param: string, newValue: number) {\n    switch (param) {\n      case 'thetaFirstLeg':\n        this.theta[0] = newValue;\n        this.resetPhysics();\n        break;\n      case 'thetaSecondLeg':\n        this.theta[1] = newValue;\n        this.resetPhysics();\n        break;\n      case 'lengthFirstLeg':\n        this.l[0] = newValue;\n        break;\n      case 'lengthSecondLeg':\n        this.l[1] = newValue;\n        break;\n      case 'massFirstAnkle':\n        this.m[0] = newValue;\n        break;\n      case 'massSecondAnkle':\n        this.m[1] = newValue;\n        break;\n      case 'gravitation':\n        this.g = newValue;\n        break;\n    }\n  }\n\n  recalcPositions(): void {\n    const { sin, cos } = Math;\n    const { x, y, theta, l } = this;\n    // calculate the new bob positions\n    x[0] = l[0] * sin(theta[0]);\n    y[0] = l[0] * cos(theta[0]);\n    x[1] = x[0] + l[1] * sin(theta[1]);\n    y[1] = y[0] + l[1] * cos(theta[1]);\n  }\n\n  tick(): void {\n    const nextState = this.advanceState(this.getPendulumState());\n    this.theta = nextState.theta;\n    this.dTheta = nextState.dTheta;\n    this.ddTheta = nextState.ddTheta;\n    this.l = nextState.l;\n    this.m = nextState.m;\n    this.g = nextState.g;\n\n\n    this.recalcPositions();\n\n  }\n\n  advanceState(prev: PendulumState): PendulumState {\n    const next = { ...prev };\n\n    const { sin, cos } = Math;\n    const { theta, dTheta, ddTheta, l, m, g } = next;\n    const { mem } = this;\n\n    // extract repeated calculations\n    mem.massSum = m[0] + m[1];\n    mem.biasedMassSum = 2 * m[0] + m[1];\n    mem.angleDifference = theta[0] - theta[1];\n    mem.doubleSineAngleDiff = 2 * sin(mem.angleDifference);\n    mem.cosAngleDiff = cos(mem.angleDifference);\n    mem.denFactor = mem.biasedMassSum - m[1] * cos(2 * mem.angleDifference);\n    mem.velSquaredTimesL = [\n      dTheta[0] * dTheta[0] * l[0],\n      dTheta[1] * dTheta[1] * l[1]\n    ];\n\n    const {\n      massSum,\n      biasedMassSum,\n      doubleSineAngleDiff,\n      cosAngleDiff,\n      denFactor,\n      velSquaredTimesL,\n    } = mem;\n\n    // solve for the second derivatives\n    // the equations are very long fractions, that's why they were split like this\n    const num = [0, 0, 0, 0];\n    const den = [\n      l[0] * denFactor,\n      l[1] * denFactor\n    ];\n\n    // for theta 1\n    num[0] = -g * biasedMassSum * sin(theta[0]);\n    num[1] = -m[1] * g * sin(theta[0] - 2 * theta[1]);\n    num[2] = -doubleSineAngleDiff * m[1]\n    num[3] = velSquaredTimesL[1] + velSquaredTimesL[0] * cosAngleDiff;\n    ddTheta[0] = (num[0] + num[1] + num[2] * num[3]) / den[0];\n\n    // for theta 2\n    num[0] = doubleSineAngleDiff;\n    num[1] = velSquaredTimesL[0] * massSum;\n    num[2] = g * massSum * cos(theta[0]);\n    num[3] = velSquaredTimesL[1] * m[1] * cosAngleDiff;\n    ddTheta[1] = (num[0] * (num[1] + num[2] + num[3])) / den[1];\n\n    // simulate physics for theta 1 and 2\n    for (let i = 0; i < 2; i++) {\n\n      dTheta[i] += ddTheta[i];\n      theta[i] += dTheta[i];\n\n      theta[i] %= (2 * Math.PI);\n      if (theta[i] < 0) {\n        theta[i] += 2 * Math.PI;\n      }\n\n      // Optional dampening function\n      // dTheta[i] *= 0.9975\n    }\n\n    // experimental dampening function to prevent pendulum from going crazy\n    if (dTheta[0] >= 0.4 || dTheta[0] <= -0.4) {\n      dTheta[0] *= 0.5\n      dTheta[1] = 0\n      ddTheta[0] *= 0.2\n      ddTheta[1] *= 0.8\n    }\n\n    return next;\n  }\n\n  getPendulumState(): PendulumState {\n    return {\n      theta: this.theta,\n      dTheta: this.dTheta,\n      ddTheta: this.ddTheta,\n      l: this.l,\n      m: this.m,\n      g: this.g,\n    };\n  }\n\n  resetPendulumState(state: PendulumState): void {\n    this.theta = state.theta;\n    this.dTheta = state.dTheta;\n    this.ddTheta = state.ddTheta;\n    this.l = state.l;\n    this.m = state.m;\n    this.g = state.g;\n\n    this.recalcPositions();\n  }\n}\n","import React from \"react\";\n\nexport default class Visualizations extends React.Component<{ highlighted: string, doublePendulumVisualization: any, envelopeVisualization: any, filterVisualization: any, volumeVisualization: any }, {}> {\n\n    shouldComponentUpdate(nextProps: any, nextState: any) {\n        return this.props.highlighted !== nextProps.highlighted\n            || this.props.doublePendulumVisualization !== nextProps.doublePendulumVisualization\n            || this.props.envelopeVisualization !== nextProps.envelopeVisualization\n            || this.props.filterVisualization !== nextProps.filterVisualization\n            || this.props.volumeVisualization !== nextProps.volumeVisualization\n    }\n\n    render() {\n        return (\n            <div className=\"Visualizations\">\n\n                <div className=\"FocusCard\" id={this.props.highlighted}>\n                    {this.props.doublePendulumVisualization}\n                </div>\n\n                <div className=\"DetailTopCard\" id={this.props.highlighted}>\n                    {this.props.envelopeVisualization}\n                </div>\n\n                <div className=\"DetailCenterCard\" id={this.props.highlighted}>\n                    {this.props.filterVisualization}\n                </div>\n\n                <div className=\"DetailBottomCard\" id={this.props.highlighted}>\n                    {this.props.volumeVisualization}\n                </div>\n\n            </div>\n        )\n    }\n}","import { Slider, Select, MenuItem } from '@material-ui/core';\nimport React from 'react';\nimport { IPreset, ITypes } from '../data/Presets';\nimport { LP, HP, BP, NOTCH } from '../data/Constants';\n\nclass PendulumContent extends React.Component<{ preset: any, handleSliderChange: any, theta1Value: number, theta2Value: number, disabledTheta: boolean }, { theta1Value: number, theta2Value: number }> {\n\n    constructor(props: any) {\n        super(props);\n        this.state = {\n            theta1Value: props.theta1Value,\n            theta2Value: props.theta2Value\n        }\n    }\n\n    shouldComponentUpdate(nextProps: any, nextState: any) {\n        if (nextProps.theta1Value !== this.props.theta1Value && nextProps.theta2Value !== this.props.theta2Value) {\n            this.setState({\n                theta1Value: nextProps.theta1Value,\n                theta2Value: nextProps.theta2Value,\n            });\n        }\n        return true\n    }\n\n    changeValue(param: string, newValue: number) {\n        if (param.startsWith('thetaFirst')) {\n            this.setState({\n                theta1Value: newValue\n            });\n        } else if (param.startsWith('thetaSecond')) {\n            this.setState({\n                theta2Value: newValue\n            });\n        }\n        this.props.handleSliderChange(param, newValue);\n    }\n\n    render() {\n        let params = Object.keys(this.props.preset);\n        params.shift();\n        let lastParam = params.pop() as string;\n        let content = [];\n        for (let i = 0; i < params.length; i += 2) {\n            let param = params.slice(i, i + 2);\n            let p: IPreset[] = [this.props.preset[param[0]], this.props.preset[param[1]]];\n            content.push(\n                <div className=\"SettingsContentParameter\" key={i}>\n                    <h3 className=\"Oscillator\">{param[0].split(/(?=[A-Z])/)[0]}</h3>\n                    <Slider\n                        className=\"ParameterSlider\"\n                        id=\"first\"\n                        value={param[0].startsWith('theta') ? this.state.theta1Value : undefined}\n                        disabled={param[0].startsWith('theta') ? this.props.disabledTheta : undefined}\n                        defaultValue={p[0].default}\n                        step={p[0].step}\n                        min={p[0].min}\n                        max={p[0].max}\n                        onChange={(e, newValue) => this.changeValue(param[0], newValue as number)}\n                        valueLabelDisplay=\"auto\"\n                    />\n                    <Slider\n                        className=\"ParameterSlider\"\n                        id=\"second\"\n                        value={param[1].startsWith('theta') ? this.state.theta2Value : undefined}\n                        disabled={param[1].startsWith('theta') ? this.props.disabledTheta : undefined}\n                        defaultValue={p[1].default}\n                        step={p[1].step}\n                        min={p[1].min}\n                        max={p[1].max}\n                        onChange={(e, newValue) => this.changeValue(param[1], newValue as number)}\n                        valueLabelDisplay=\"auto\"\n                    />\n                </div>\n            )\n        }\n        let lastP: IPreset = this.props.preset[lastParam];\n        content.push(\n            <div className=\"SettingsContentParameter\" key={params.length}>\n                <h3>{lastParam}</h3>\n                <Slider\n                    className=\"ParameterSlider\"\n                    defaultValue={lastP.default}\n                    step={lastP.step}\n                    min={lastP.min}\n                    max={lastP.max}\n                    onChange={(e, newValue) => this.props.handleSliderChange(lastParam, newValue)}\n                    valueLabelDisplay=\"auto\"\n                />\n            </div>\n        )\n\n        return <div className=\"SettingsContent\">{content}</div>\n    }\n}\n\nclass EnvelopeContent extends React.Component<{ preset: any, handleSliderChange: any, disabled: boolean }, {}> {\n\n    shouldComponentUpdate(nextProps: any, nextState: any) {\n        return nextProps.preset !== this.props.preset || nextProps.handleSliderChange !== this.props.handleSliderChange || nextProps.disabled !== this.props.disabled\n    }\n\n    render() {\n        let params = Object.keys(this.props.preset);\n        params.shift()\n        return <div className=\"SettingsContent\">{\n            params.map((param: string, i: number) => {\n                let p: IPreset = this.props.preset[param]\n                return (\n                    <div className=\"SettingsContentParameter\" key={i}>\n                        <h3 className=\"Envelope\">{param.toUpperCase()}</h3>\n                        <Slider\n                            className=\"ParameterSlider\"\n                            defaultValue={p.default}\n                            disabled={this.props.disabled}\n                            step={p.step}\n                            min={p.min}\n                            max={p.max}\n                            onChange={(e, newValue) => this.props.handleSliderChange(param, newValue)}\n                            valueLabelDisplay=\"auto\"\n                        />\n                    </div>\n                )\n            })\n        } </div>\n    }\n}\n\n\nclass FilterContent extends React.Component<{ preset: any, handleSliderChange: any }, {}> {\n\n    shouldComponentUpdate(nextProps: any, nextState: any) {\n        return nextProps.preset !== this.props.preset || nextProps.handleSliderChange !== this.props.handleSliderChange\n    }\n\n    render() {\n        let params = Object.keys(this.props.preset);\n        params.shift();\n        let type: ITypes = this.props.preset[params[0]];\n        let typeName = params[0];\n        params.shift();\n\n        const filterDisplayNames = new Map([\n            [LP, 'Low Pass'],\n            [HP, 'High Pass'],\n            [BP, 'Band Pass'],\n            [NOTCH, 'Notch'],\n        ]);\n\n        return <div className=\"SettingsContent\">\n            <Select\n                className=\"SettingsContentParameter\"\n                defaultValue={type.default}\n                onChange={(e) => this.props.handleSliderChange(typeName, e.target.value)}\n            >\n                {\n                    type.options.map((option: string, i: number) => {\n                        return (\n                            <MenuItem key={i} value={option}>{filterDisplayNames.get(option)}</MenuItem>\n                        )\n                    })\n                }\n            </Select>\n            {\n                params.map((param: any, i: number) => {\n                    let p: IPreset = this.props.preset[param];\n                    return (\n                        <div className=\"SettingsContentParameter\" key={i}>\n                            <h3>{param}</h3>\n                            <Slider\n                                className=\"ParameterSlider\"\n                                defaultValue={p.default}\n                                step={p.step}\n                                min={p.min}\n                                max={p.max}\n                                onChange={(e, newValue) => this.props.handleSliderChange(param, newValue)}\n                                valueLabelDisplay=\"auto\"\n                            />\n                        </div>\n                    )\n                })\n            }\n        </div>\n    }\n}\n\nclass VolumeContent extends React.Component<{ preset: any, handleSliderChange: any }, {}> {\n\n    shouldComponentUpdate(nextProps: any, nextState: any) {\n        return nextProps.preset !== this.props.preset || nextProps.handleSliderChange !== this.props.handleSliderChange\n    }\n\n    render() {\n        let p: IPreset = this.props.preset.volume;\n        return <div className=\"SettingsContent\">\n            <div className=\"SettingsContentParameter\">\n                <Slider\n                    className=\"ParameterSlider\"\n                    defaultValue={p.default}\n                    step={p.step}\n                    min={p.min}\n                    max={p.max}\n                    valueLabelFormat={p.valueLabelFormat}\n                    onChange={(e, newValue) => this.props.handleSliderChange(this.props.preset.name, newValue)}\n                    valueLabelDisplay=\"auto\"\n                />\n            </div>\n        </div>\n    }\n}\n\n\n\nexport default class SettingsCards extends React.Component<{ classNames: any, presets: any, setHighlight: any, clearHighlight: any, sliderChanges: any, theta1Value: number, theta2Value: number, disabledTheta: boolean, disabledEnvelope: boolean }, {}> {\n\n    shouldComponentUpdate(nextProps: any, nextState: any) {\n        return (nextProps.theta1Value !== this.props.theta1Value && nextProps.theta2Value !== this.props.theta2Value) || nextProps.diabledTheta !== this.props.disabledTheta || nextProps.disabledEnvelope !== this.props.disabledEnvelope\n    }\n\n    render() {\n        let props = this.props\n        return (\n            <div className=\"SettingsCards\"> {\n                props.classNames.map((className: string, i: number) => {\n                    let preset = props.presets.getComponentByName(className)\n                    return (\n\n                        <div\n                            className={\"Settings\" + className + \"Card\"}\n                            key={i}\n                            onMouseEnter={() => props.setHighlight(className)}\n                            onMouseLeave={props.clearHighlight}\n                        >\n                            <h2 className=\"SettingsHeader\">{className}</h2>\n                            {\n                                {\n                                    'Oscillator': <PendulumContent preset={preset} handleSliderChange={props.sliderChanges[className]} theta1Value={props.theta1Value} theta2Value={props.theta2Value} disabledTheta={props.disabledTheta} />,\n                                    'Envelope': <EnvelopeContent preset={preset} handleSliderChange={props.sliderChanges[className]} disabled={props.disabledEnvelope} />,\n                                    'Filter': <FilterContent preset={preset} handleSliderChange={props.sliderChanges[className]} />,\n                                    'Volume': <VolumeContent preset={preset} handleSliderChange={props.sliderChanges[className]} />,\n                                }[className as string]\n                            }\n                        </div>\n\n                    )\n                })\n            } </div>\n        );\n    }\n}\n","import React from \"react\";\nimport Sketch from \"react-p5\";\nimport p5Types from \"p5\";\nimport DoublePendulum from \"../sim/double-pendulum\";\n\nfunction lerpRange(value: number, low1: number, high1: number, low2: number, high2: number) {\n    return low2 + (high2 - low2) * (value - low1) / (high1 - low1);\n}\n\ninterface ComponentProps {\n    dp: DoublePendulum\n    readonly memorySettings: {\n        drawMode: 'solidLine' | 'fadingLine' | 'dots',\n        maxMem: number,\n        fadingStart: number,\n        strokeWeight: number,\n        drawColor: number[],\n    }\n    readonly pendulumSettings: {\n        drawColor: number[],\n        legWeight: number,\n        ankleWidth: number\n    }\n    canvasDoubleClicked: any\n}\n\nexport default class PendulumVisualization extends React.Component<ComponentProps, {}> {\n\n    mem: number[][]\n    orgDim: number[]\n    dim: number[]\n    buffer: p5Types.Graphics\n    padding: number\n    paused: boolean\n    props: ComponentProps\n\n    constructor(props: any) {\n        super(props);\n\n        this.props = props;\n\n        this.mem = [];\n        this.orgDim = [];\n        this.dim = [];\n        this.padding = 70;\n        this.buffer = null as unknown as p5Types.Graphics\n\n        this.paused = true;\n    }\n\n    setup = (p5: p5Types, canvasParentRef: Element) => {\n\n        this.dim = [canvasParentRef.clientWidth, canvasParentRef.clientHeight];\n        this.orgDim = this.dim;\n        let cnv = p5.createCanvas(this.dim[0], this.dim[1], 'p2d').parent(canvasParentRef);\n\n        cnv.doubleClicked((event) => {\n            this.paused = !this.paused;\n            this.mem = [];\n            this.props.canvasDoubleClicked(this.paused);\n        })\n\n        p5.windowResized = () => {\n            let newWidth = document.getElementsByClassName('FocusCard').item(0)?.clientWidth as number;\n            let newHeight = document.getElementsByClassName('FocusCard').item(0)?.clientHeight as number;\n            if (newWidth !== this.dim[0] || newHeight !== this.dim[1]) {\n                this.dim = [newWidth, newHeight];\n                p5.resizeCanvas(this.dim[0], this.dim[1], true);\n                this.buffer.resizeCanvas(this.dim[0] - this.padding, this.dim[1] - this.padding, true);\n                this.buffer.translate(this.dim[0] / 2, this.dim[1] / 2);\n            }\n        }\n\n        this.buffer = p5.createGraphics(this.dim[0] - this.padding, this.dim[1] - this.padding);\n        this.buffer.translate(this.buffer.width / 2, this.buffer.height / 2);\n\n        p5.textFont('Consolas');\n    }\n\n    draw = (p5: p5Types) => {\n\n        p5.clear();\n\n        //p5.scale(this.dim[0] / this.orgDim[0]);\n        p5.translate(this.dim[0] / 2, this.dim[1] / 2);\n\n        let x0 = this.props.dp.x[0];\n        let y0 = this.props.dp.y[0];\n        let x1 = this.props.dp.x[1];\n        let y1 = this.props.dp.y[1];\n\n        if (!this.paused) {\n\n            let px1 = x1;\n            let py1 = y1;\n\n            this.props.dp.tick();\n\n            x0 = this.props.dp.x[0];\n            y0 = this.props.dp.y[0];\n            x1 = this.props.dp.x[1];\n            y1 = this.props.dp.y[1];\n\n            // Memory Line/Dots\n            if (this.props.memorySettings.drawMode === 'solidLine') {\n                p5.image(this.buffer, - this.dim[0] / 2 + this.padding / 2, - this.dim[1] / 2 + this.padding / 2);\n                this.buffer.stroke(this.props.memorySettings.drawColor);\n                this.buffer.strokeWeight(this.props.memorySettings.strokeWeight);\n                if (p5.frameCount > 1) {\n                    this.buffer.line(px1, py1, x1, y1);\n                }\n            } else if (this.props.memorySettings.drawMode === 'dots' || this.props.memorySettings.drawMode === 'fadingLine') {\n                let newLength = this.mem.push([x1, y1]);\n                if (newLength > this.props.memorySettings.maxMem) {\n                    this.mem.shift();\n                }\n                this.mem.forEach((e) => {\n                    let alpha = 255;\n                    if (this.mem.indexOf(e) <= this.props.memorySettings.fadingStart) {\n                        alpha = lerpRange(this.mem.indexOf(e), 0, this.props.memorySettings.fadingStart, 0, 255)\n                    }\n                    let color = [this.props.memorySettings.drawColor[0], this.props.memorySettings.drawColor[1], this.props.memorySettings.drawColor[2], alpha]\n                    if (this.props.memorySettings.drawMode === 'dots') {\n                        p5.fill(color);\n                        p5.circle(e[0], e[1], 2);\n                    } else {\n                        let previous = this.mem.indexOf(e) > 0 ? this.mem[this.mem.indexOf(e) - 1] : e\n                        p5.stroke(color);\n                        p5.strokeWeight(this.props.memorySettings.strokeWeight);\n                        p5.line(previous[0], previous[1], e[0], e[1]);\n                    }\n                });\n            }\n        }\n        // Legs\n        p5.noFill();\n        p5.stroke(this.props.pendulumSettings.drawColor);\n        p5.strokeWeight(this.props.pendulumSettings.legWeight);\n        p5.line(0, 0, x0, y0);\n        p5.line(x0, y0, x1, y1);\n\n        // Ankles\n        p5.fill(this.props.pendulumSettings.drawColor);\n        p5.noStroke();\n        p5.circle(0, 0, this.props.pendulumSettings.ankleWidth);\n        p5.circle(x0, y0, this.props.pendulumSettings.ankleWidth);\n        p5.circle(x1, y1, this.props.pendulumSettings.ankleWidth);\n\n        // Debug Text\n        /*\n        p5.translate(-this.dim[0] / 2, -this.dim[1] / 2);\n        p5.text('Theta1:    ' + this.props.dp.theta[0].toString().replace(/^(?=\\d)/, ' '), 10, 20);\n        p5.text('Theta2:    ' + this.props.dp.theta[1].toString().replace(/^(?=\\d)/, ' '), 10, 40);\n        p5.text('D Theta1:  ' + this.props.dp.dTheta[0].toString().replace(/^(?=\\d)/, ' '), 10, 80);\n        p5.text('D Theta2:  ' + this.props.dp.dTheta[1].toString().replace(/^(?=\\d)/, ' '), 10, 100);\n        p5.text('DD Theta1: ' + this.props.dp.ddTheta[0].toString().replace(/^(?=\\d)/, ' '), 10, 140);\n        p5.text('DD Theta2: ' + this.props.dp.ddTheta[1].toString().replace(/^(?=\\d)/, ' '), 10, 160);\n        */\n    }\n\n    render() {\n        return (\n            <Sketch setup={this.setup} draw={this.draw} className=\"pendulum\" />\n        );\n    }\n}","import React from 'react';\nimport { LineChart, Line, XAxis, YAxis, ResponsiveContainer } from 'recharts';\n\ninterface ComponentProps {\n    a: number,\n    d: number,\n    s: number,\n    r: number\n}\n\nexport default class EnvelopeVisualization extends React.Component<ComponentProps, {}> {\n\n    // padding = 1;\n    // labelDist = -10;\n\n    shouldComponentUpdate(nextProps: any, nextState: any) {\n        return this.props.a !== nextProps.a || this.props.d !== nextProps.d || this.props.s !== nextProps.s || this.props.r !== nextProps.r\n    }\n\n\n    render() {\n\n        const max = this.props.a + this.props.d + 100 + this.props.r;\n\n        const data = [\n            {\n                x: 0,\n                y: 0\n            },\n            {\n                x: this.props.a,\n                y: 100\n            },\n            {\n                x: this.props.a + this.props.d,\n                y: this.props.s\n            },\n            {\n                x: max - this.props.r,\n                y: this.props.s\n            },\n            {\n                x: max,\n                y: 0\n            }\n        ];\n\n        return (\n            <ResponsiveContainer>\n                <LineChart data={data} margin={{ top: 30, bottom: 30, left: 30, right: 30 }}>\n                    <XAxis\n                        hide={true}\n                        dataKey='x'\n                        type='number'\n                        domain={[0, data[4].x]}\n                        tick={false}\n                    />\n                    <YAxis\n                        hide={true}\n                        type='number'\n                        domain={[0, data[1].y]}\n                        tick={false}\n                    />\n\n                    {/*\n                    <ReferenceLine\n                        stroke='white'\n                        label={{ value: 'S', position: 'right', fill: 'white', fontFamily: 'Raleway' }}\n                        segment={[\n                            {\n                                x: data[2].x + (data[3].x - data[2].x) / 2,\n                                y: data[0].y\n                            },\n                            {\n                                x: data[2].x + (data[3].x - data[2].x) / 2,\n                                y: data[2].y - 3\n                            }\n                        ]}\n                        strokeWidth={2}\n                    />\n                    \n                    <ReferenceLine\n                        stroke='white'\n                        label={{ value: 'A', position: 'bottom', fill: 'white', fontFamily: 'Raleway' }}\n                        ifOverflow='extendDomain'\n                        segment={[\n                            { x: data[0].x + this.padding, y: this.labelDist },\n                            { x: data[1].x - this.padding, y: this.labelDist }\n                        ]}\n                        strokeWidth={2}\n                    />\n                    \n                    <ReferenceLine\n                        stroke='white'\n                        label={{ value: 'D', position: 'bottom', fill: 'white', fontFamily: 'Raleway' }}\n                        ifOverflow='extendDomain'\n                        segment={[\n                            { x: data[1].x + this.padding, y: this.labelDist },\n                            { x: data[2].x - this.padding, y: this.labelDist }\n                        ]}\n                        strokeWidth={2}\n                    />\n                    \n                    <ReferenceLine\n                        stroke='white'\n                        label={{ value: 'R', position: 'bottom', fill: 'white', fontFamily: 'Raleway' }}\n                        ifOverflow='extendDomain'\n                        segment={[\n                            { x: data[3].x + this.padding, y: this.labelDist },\n                            { x: data[4].x - this.padding, y: this.labelDist }\n                        ]}\n                        strokeWidth={2}\n                    />\n                    */}\n\n                    <Line\n                        type='monotone'\n                        dataKey='y'\n                        stroke='#2F80ED'\n                        strokeWidth={3}\n                        dot={false}\n                        strokeLinecap='round'\n                    />\n                </LineChart>\n            </ResponsiveContainer>\n        )\n    }\n}","import React from 'react';\nimport { LineChart, Line, XAxis, YAxis, ResponsiveContainer } from 'recharts';\n\ninterface ComponentProps {\n    spectrum: Float32Array\n}\n\nexport default class FilterVisualization extends React.Component<ComponentProps, {}> {\n\n    shouldComponentUpdate(nextProps: any, nextState: any) {\n        return this.props.spectrum !== nextProps.spectrum\n    }\n\n\n    render() {\n\n        let data = []\n        let raw_data = this.props.spectrum.filter(Boolean)\n\n        for (let i = 0; i < raw_data.length; i++) {\n            data[i] = {\n                x: i,\n                y: Math.log(raw_data[i])\n            }\n        }\n\n        return (\n            <ResponsiveContainer>\n                <LineChart data={data} margin={{ top: 30, bottom: 30, left: 30, right: 30 }}>\n                    <XAxis\n                        hide={true}\n                        dataKey='x'\n                        type='number'\n                        tick={false}\n                    />\n                    <YAxis\n                        hide={true}\n                        type='number'\n                        tick={false}\n                    />\n                    <Line\n                        type='monotone'\n                        dataKey='y'\n                        stroke='#2F80ED'\n                        strokeWidth={3}\n                        dot={false}\n                        strokeLinecap='round'\n                    />\n                </LineChart>\n            </ResponsiveContainer>\n        )\n    }\n}","import React from 'react';\nimport Sketch from \"react-p5\";\nimport p5Types from \"p5\";\nimport DoublePendulum from '../sim/double-pendulum';\nimport { DSPZERO } from '../data/Constants';\n\nfunction lerpRange(value: number, low1: number, high1: number, low2: number, high2: number) {\n    return low2 + (high2 - low2) * (value - low1) / (high1 - low1);\n}\n\ninterface ComponentProps {\n    dp: DoublePendulum\n    paused: boolean\n    volume: number\n}\n\n\nexport default class VolumeVisualization extends React.Component<ComponentProps, {}> {\n\n    orgDim: number[]\n    dim: number[]\n    history: number[]\n    xRange: number\n    padding: number\n\n\n    constructor(props: any) {\n        super(props);\n\n        this.orgDim = [];\n        this.dim = [];\n        this.history = [];\n        this.xRange = 100;\n        this.padding = 30\n    }\n\n    setup = (p5: p5Types, canvasParentRef: Element) => {\n        this.dim = [canvasParentRef.clientWidth, canvasParentRef.clientHeight];\n        this.orgDim = this.dim;\n        p5.createCanvas(this.dim[0], this.dim[1], 'p2d').parent(canvasParentRef);\n\n        p5.frameRate(30);\n\n        p5.windowResized = () => {\n            let newWidth = document.getElementsByClassName('DetailBottomCard').item(0)?.clientWidth as number;\n            let newHeight = document.getElementsByClassName('DetailBottomCard').item(0)?.clientHeight as number;\n            if (newWidth !== this.dim[0] || newHeight !== this.dim[1]) {\n                this.dim = [newWidth, newHeight];\n                p5.resizeCanvas(this.dim[0], this.dim[1], true);\n            }\n        }\n    }\n\n    draw = (p5: p5Types) => {\n        p5.clear();\n\n        p5.translate(0, this.dim[1] / 2);\n\n        p5.stroke('#2F80ED');\n        p5.strokeWeight(3);\n\n        let x = this.props.dp.x[1] * this.props.volume;\n        x = this.props.volume === DSPZERO ? 0 : x\n\n        if (!this.props.paused) {\n            let newLength = this.history.push(x);\n            if (newLength > this.xRange) {\n                this.history.shift();\n            }\n        }\n\n        let maxValue = Math.max(Math.max(...this.history), Math.abs(Math.min(...this.history)));\n        let step = (this.dim[0] - this.padding * 2) / this.xRange;\n        let halfHeight = this.dim[1] / 2;\n\n        for (let i = 1; i < this.history.length; i++) {\n            let previous = this.history.length > 0 ? this.history[i - 1] : this.history[i];\n            let current = this.history[i];\n\n            previous = lerpRange(previous, -maxValue, maxValue, - halfHeight + this.padding, halfHeight - this.padding);\n            current = lerpRange(current, -maxValue, maxValue, - halfHeight + this.padding, halfHeight - this.padding);\n\n            previous = isNaN(previous) ? 0 : previous;\n            current = isNaN(current) ? 0 : current;\n\n            p5.line((i - 1) * step + this.padding, previous, i * step + this.padding, current);\n        }\n    }\n\n    render() {\n        return (\n            <Sketch setup={this.setup} draw={this.draw} className=\"volumeVisualization\" />\n        );\n    }\n}","import React from 'react';\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\nimport Modal from '@material-ui/core/Modal';\nimport './App.css';\n\nimport { A, D, S, R, FILTER_RESOLUTION } from './data/Constants';\nimport { Presets } from './data/Presets';\n\nimport AudioGraph from './dsp/audio-graph';\nimport DoublePendulum from './sim/double-pendulum';\n\nimport Visualizations from './com/Visualizations'\nimport SettingsCards from './com/SettingsCards';\nimport PendulumVisualization from './com/PendulumVisualization';\nimport EnvelopeVisualization from './com/EnvelopeVisualization';\nimport FilterVisualization from './com/FilterVisualization';\nimport VolumeVisualization from './com/VolumeVisualizationP5';\n\nconst theme = createMuiTheme({\n  palette: {\n    type: 'dark',\n    primary: {\n      main: '#2F80ED',\n    },\n  },\n  typography: {\n    fontFamily: 'Raleway',\n    fontSize: 16,\n  }\n});\n\ninterface ComponentState {\n  visualsOrder: {\n    [key: string]: string\n  },\n  highlighted: string\n  theta1Value: number\n  theta2Value: number\n  pendulumPaused: boolean\n  envelopeA: number,\n  envelopeD: number,\n  envelopeS: number,\n  envelopeR: number,\n  filterSpectrum: Float32Array,\n  volume: number,\n  disabledEnvelope: boolean\n  greeterOpen: boolean\n}\n\nclass App extends React.Component<{}, ComponentState> {\n\n  doublePendulum: DoublePendulum;\n  audioGraph: AudioGraph;\n  readonly presets: Presets;\n  readonly componentNames: Array<string>;\n\n  constructor(props: any) {\n    super(props);\n\n    // use presets in all components as database --> especially in sliders\n    this.presets = new Presets();\n    this.componentNames = this.presets.getComponentNames();\n\n    // create the double pendulum\n    this.doublePendulum = new DoublePendulum(this.presets.getDoublePendulumPresets())\n    this.doublePendulum.recalcPositions();\n\n    // create the audio graph\n    this.audioGraph = new AudioGraph(this.doublePendulum);\n\n    this.state = {\n      visualsOrder: this.presets.visualsOrder,\n      highlighted: '',\n      theta1Value: this.presets.oscillator.thetaFirstLeg.default,\n      theta2Value: this.presets.oscillator.thetaSecondLeg.default,\n      pendulumPaused: true,\n      envelopeA: (this.presets.envelope.a.default / this.presets.envelope.a.max) * 100,\n      envelopeD: (this.presets.envelope.d.default / this.presets.envelope.d.max) * 100,\n      envelopeS: (this.presets.envelope.s.default / this.presets.envelope.s.max) * 100,\n      envelopeR: (this.presets.envelope.r.default / this.presets.envelope.r.max) * 100,\n      filterSpectrum: this.audioGraph.getFilterSpectrum(FILTER_RESOLUTION),\n      volume: this.presets.volume.volume.default,\n      disabledEnvelope: !this.audioGraph.hasMIDI,\n      greeterOpen: true\n    }\n  }\n\n  setHighlight = (className: string) => {\n    this.setState((state) => {\n      return {\n        highlighted: state.visualsOrder[className]\n      }\n    });\n  }\n\n  clearHighlight = (e: any) => {\n    this.setState({\n      highlighted: ''\n    });\n  }\n\n  canvasDoubleClicked = (paused: boolean) => {\n    if (paused) {\n      this.audioGraph.audioContext.suspend();\n      this.setState({\n        pendulumPaused: true,\n        theta1Value: Math.round(this.doublePendulum.theta[0] * 100) / 100,\n        theta2Value: Math.round(this.doublePendulum.theta[1] * 100) / 100\n      });\n    } else {\n      this.audioGraph.audioContext.resume();\n      this.setState({\n        pendulumPaused: false\n      });\n    }\n  }\n\n  handleOscillatorChange = (param: string, newValue: number) => {\n    this.doublePendulum.setValue(param, newValue);\n    if (param.startsWith('theta') || param.startsWith('length')) {\n      this.doublePendulum.recalcPositions();\n    }\n    if (param.startsWith('theta')) {\n\n    }\n  }\n\n  handleEnvelopeChange = (e: any, newValue: number) => {\n    this.audioGraph.setEnvelope({\n      identifier: e,\n      value: newValue,\n    });\n    switch (e) {\n      case A:\n        this.setState({ envelopeA: (newValue / this.presets.envelope.a.max) * 100 });\n        break;\n      case D:\n        this.setState({ envelopeD: (newValue / this.presets.envelope.d.max) * 100 });\n        break;\n      case S:\n        this.setState({ envelopeS: (newValue / this.presets.envelope.s.max) * 100 });\n        break;\n      case R:\n        this.setState({ envelopeR: (newValue / this.presets.envelope.r.max) * 100 });\n        break;\n    }\n  }\n\n  handleFilterChange = (e: any, newValue: number | 'lp' | 'hp' | 'bp' | 'notch') => {\n    this.audioGraph.setFilter({\n      identifier: e,\n      value: newValue,\n    });\n    this.setState({ filterSpectrum: this.audioGraph.getFilterSpectrum(FILTER_RESOLUTION) });\n  }\n\n  handleVolumeChange = (e: any, newValue: number) => {\n    this.audioGraph.setMasterGain(newValue);\n    this.setState({ volume: newValue });\n  }\n\n  handleModalClose = () => {\n    this.setState({\n      greeterOpen: false,\n      disabledEnvelope: !this.audioGraph.hasMIDI\n    });\n  };\n\n  render() {\n    return (\n      <ThemeProvider theme={theme}>\n        <div className=\"App\">\n          <div className=\"HeaderCard\">\n            <h1 className=\"HeaderText\">Pendulum</h1>\n            <h3 className=\"HeaderText\">Oscillator based on a double pendulum by Yannick Clausen & Henry Peters</h3>\n          </div>\n          <Modal\n            open={this.state.greeterOpen}\n            onClose={this.handleModalClose}\n            aria-labelledby=\"greeter\"\n            aria-describedby=\"greeter explaining the application\"\n          >\n            <div className=\"greeter\">\n              <h2 className=\"HeaderText\">Welcome!</h2>\n              <p className=\"greeterText\" style={{marginTop: \"2em\"}}>\n      This synthesizer will try to use any MIDI device connected to your system as a controller.\n              </p>\n              <p className=\"greeterText\">\n      Start the simulation by double-clicking the largest frame with the pendulum inside and increase the volume via the slider to the bottom right.\n              </p>\n              <p className=\"greeterText\">\n      We hope you will enjoy our work!\n              </p>\n              <button onClick={() => { this.audioGraph.setupMidi(); this.setState({ greeterOpen: false, disabledEnvelope: false })}}>Enable MIDI</button>\n              <button onClick={this.handleModalClose}>Don't enable MIDI</button>\n            </div>\n          </Modal>\n          <Visualizations\n            highlighted={this.state.highlighted}\n            doublePendulumVisualization={\n              <PendulumVisualization\n                dp={this.doublePendulum}\n                memorySettings={this.presets.pvMemorySettings}\n                pendulumSettings={this.presets.pvPendulumSettings}\n                canvasDoubleClicked={this.canvasDoubleClicked}\n              />\n            }\n            envelopeVisualization={\n              <EnvelopeVisualization\n                a={this.state.envelopeA}\n                d={this.state.envelopeD}\n                s={this.state.envelopeS}\n                r={this.state.envelopeR}\n              />\n            }\n            filterVisualization={\n              <FilterVisualization\n                spectrum={this.state.filterSpectrum}\n              />\n            }\n            volumeVisualization={\n              <VolumeVisualization\n                dp={this.doublePendulum}\n                paused={this.state.pendulumPaused}\n                volume={this.state.volume}\n              />\n            }\n          />\n          <SettingsCards\n            classNames={this.componentNames}\n            presets={this.presets}\n            setHighlight={this.setHighlight}\n            clearHighlight={this.clearHighlight}\n            sliderChanges={{\n              'Oscillator': this.handleOscillatorChange,\n              'Envelope': this.handleEnvelopeChange,\n              'Filter': this.handleFilterChange,\n              'Volume': this.handleVolumeChange,\n            }}\n            theta1Value={this.state.theta1Value}\n            theta2Value={this.state.theta2Value}\n            disabledTheta={!this.state.pendulumPaused}\n            disabledEnvelope={this.state.disabledEnvelope}\n          />\n        </div>\n      </ThemeProvider>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}